{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Management API",
        "description": "API для управления автомобилями",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "Development server"
        }
    ],
    "paths": {
        "/v1/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all car brands",
                "description": "Returns a list of all available car brands",
                "operationId": "0110736184688308fc73e7ff51fcc384",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Список автомобилей пользователя",
                "operationId": "578dda6c36b314ce22ff15838dc016e0",
                "responses": {
                    "200": {
                        "description": "Список автомобилей"
                    },
                    "401": {
                        "description": "Не авторизован"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Создание автомобиля",
                "operationId": "7ead802cd02125571b7be2efa1324e44",
                "responses": {
                    "202": {
                        "description": "Автомобиль добавлен в очередь"
                    },
                    "422": {
                        "description": "Ошибка валидации"
                    },
                    "401": {
                        "description": "Не авторизован"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get a specific car",
                "description": "Returns details of a specific car owned by the authenticated user",
                "operationId": "e147c89a84f4926f55e7e44096976ebf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные автомобиля"
                    },
                    "404": {
                        "description": "Car not found or access denied"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update a car",
                "description": "Updates a car owned by the authenticated user (asynchronous processing)",
                "operationId": "caba82d6d99f46b9ade75a7ceb24e2c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Обновление добавлено в очередь"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete a car",
                "description": "Deletes a car owned by the authenticated user",
                "operationId": "9f5e5174e79a1192b850add375857e7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/car-models": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get all car models",
                "description": "Returns a list of car models, optionally filtered by brand",
                "operationId": "d7e4a5288b097331247bce7db1647e71",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarModel"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "description": "Car brand model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CarModel": {
                "title": "Car Model",
                "description": "Car model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "brand": {
                        "$ref": "#/components/schemas/Brand"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Brands",
            "description": "Car brands management"
        },
        {
            "name": "Car Models",
            "description": "Car models management"
        },
        {
            "name": "Cars",
            "description": "Cars"
        }
    ]
}